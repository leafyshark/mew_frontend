{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { AnimatedFormStyles } from \"../components/styles/FormStyles\";\nimport Router from \"next/router\";\nimport gql from \"graphql-tag\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n    }\n  }\n`;\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $password: String!\n    $repeatPassword: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      repeatPassword: $repeatPassword\n    ) {\n      id\n      email\n    }\n  }\n`;\nconst RESET_PASSWORD_MUTATION = gql`\n  mutation RESET_PASSWORD_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst Form = ({\n  option,\n  email,\n  password,\n  repeatPassword,\n  successMessage,\n  setEmail,\n  setPassword,\n  setRepeatPassword,\n  setSuccessMessage\n}) => {\n  return __jsx(Mutation, {\n    mutation: option === 1 ? SIGNIN_MUTATION : option === 2 ? SIGNUP_MUTATION : RESET_PASSWORD_MUTATION\n  }, (sign, {\n    error,\n    loading,\n    called\n  }) => __jsx(\"form\", {\n    className: \"account-form\",\n    method: \"POST\",\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await sign({\n        variables: {\n          email,\n          password,\n          repeatPassword\n        }\n      });\n\n      if (option === 1) {\n        Router.push({\n          pathname: \"/app\"\n        });\n      } else if (option === 2) {\n        Router.push({\n          pathname: \"/app\"\n        });\n      } else {\n        setSuccessMessage(res.data.requestReset.message);\n      }\n    }\n  }, __jsx(\"div\", {\n    className: \"account-form-fields \" + (option === 1 ? \"sign-in\" : option === 2 ? \"sign-up\" : \"forgot\")\n  }, __jsx(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email Address\",\n    required: true\n  }), __jsx(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    required: option === 1 || option === 2 ? true : false,\n    disabled: option === 3 ? true : false\n  }), __jsx(\"input\", {\n    id: \"repeat-password\",\n    name: \"repeat-password\",\n    type: \"password\",\n    placeholder: \"Repeat password\",\n    onChange: e => setRepeatPassword(e.target.value),\n    required: option === 2 ? true : false,\n    disabled: option === 1 || option === 3 ? true : false\n  })), __jsx(\"button\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    className: \"btn-submit-form\",\n    type: \"submit\"\n  }, option === 1 ? \"Sign in\" : option === 2 ? \"Sign up\" : \"Reset password\"), __jsx(Error, {\n    error: error\n  }), option === 3 && !error && !loading && called && __jsx(Success, {\n    message: successMessage\n  })));\n};\n\nconst Auth = () => {\n  const [option, setOption] = React.useState(1);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [repeatPassword, setRepeatPassword] = React.useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(\"\");\n  return __jsx(AnimatedFormStyles, null, __jsx(\"ul\", {\n    className: \"options\"\n  }, __jsx(\"li\", {\n    className: option === 1 ? \"active\" : \"\",\n    onClick: () => setOption(1)\n  }, \"Sign in\"), __jsx(\"li\", {\n    className: option === 2 ? \"active\" : \"\",\n    onClick: () => setOption(2)\n  }, \"Sign up\"), __jsx(\"li\", {\n    className: option === 3 ? \"active\" : \"\",\n    onClick: () => setOption(3)\n  }, \"Forgot\"), __jsx(\"li\", null, __jsx(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"\",\n    width: \"70\"\n  }))), __jsx(Form, {\n    option: option,\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    repeatPassword: repeatPassword,\n    setRepeatPassword: setRepeatPassword,\n    successMessage: successMessage,\n    setSuccessMessage: setSuccessMessage\n  }));\n};\n\nexport default Auth;","map":null,"metadata":{},"sourceType":"module"}