{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tlr/Documents/Coding/new/frontend/components/Auth.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_PASSWORD_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION(\\n    $email: String!\\n    $password: String!\\n    $repeatPassword: String!\\n  ) {\\n    signup(\\n      email: $email\\n      password: $password\\n      repeatPassword: $repeatPassword\\n    ) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { AnimatedFormStyles } from \"../components/styles/FormStyles\";\nimport Router from \"next/router\";\nimport gql from \"graphql-tag\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\nvar SIGNIN_MUTATION = gql(_templateObject());\nvar SIGNUP_MUTATION = gql(_templateObject2());\nvar RESET_PASSWORD_MUTATION = gql(_templateObject3());\n\nvar Form = function Form(_ref) {\n  var option = _ref.option,\n      email = _ref.email,\n      password = _ref.password,\n      repeatPassword = _ref.repeatPassword,\n      successMessage = _ref.successMessage,\n      setEmail = _ref.setEmail,\n      setPassword = _ref.setPassword,\n      setRepeatPassword = _ref.setRepeatPassword,\n      setSuccessMessage = _ref.setSuccessMessage;\n  return __jsx(Mutation, {\n    mutation: option === 1 ? SIGNIN_MUTATION : option === 2 ? SIGNUP_MUTATION : RESET_PASSWORD_MUTATION,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, function (sign, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading,\n        called = _ref2.called;\n    return __jsx(\"form\", {\n      className: \"account-form\",\n      method: \"POST\",\n      onSubmit: function _callee(e) {\n        var res;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(sign({\n                  variables: {\n                    email: email,\n                    password: password,\n                    repeatPassword: repeatPassword\n                  }\n                }));\n\n              case 3:\n                res = _context.sent;\n\n                if (option === 1) {\n                  Router.push({\n                    pathname: \"/app\"\n                  });\n                } else if (option === 2) {\n                  Router.push({\n                    pathname: \"/app\"\n                  });\n                } else {\n                  setSuccessMessage(res.data.requestReset.message);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"account-form-fields \" + (option === 1 ? \"sign-in\" : option === 2 ? \"sign-up\" : \"forgot\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      placeholder: \"Email Address\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      required: option === 1 || option === 2 ? true : false,\n      disabled: option === 3 ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      id: \"repeat-password\",\n      name: \"repeat-password\",\n      type: \"password\",\n      placeholder: \"Repeat password\",\n      onChange: function onChange(e) {\n        return setRepeatPassword(e.target.value);\n      },\n      required: option === 2 ? true : false,\n      disabled: option === 1 || option === 3 ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      className: \"btn-submit-form\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, option === 1 ? \"Sign in\" : option === 2 ? \"Sign up\" : \"Reset password\"), __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), option === 3 && !error && !loading && called && __jsx(Success, {\n      message: successMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  });\n};\n\nvar Auth = function Auth() {\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      option = _React$useState2[0],\n      setOption = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      repeatPassword = _React$useState8[0],\n      setRepeatPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      successMessage = _React$useState10[0],\n      setSuccessMessage = _React$useState10[1];\n\n  return __jsx(AnimatedFormStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    className: option === 1 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Sign in\"), __jsx(\"li\", {\n    className: option === 2 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Sign up\"), __jsx(\"li\", {\n    className: option === 3 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(3);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Forgot\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"\",\n    width: \"70\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }))), __jsx(Form, {\n    option: option,\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    repeatPassword: repeatPassword,\n    setRepeatPassword: setRepeatPassword,\n    successMessage: successMessage,\n    setSuccessMessage: setSuccessMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/tlr/Documents/Coding/new/frontend/components/Auth.js"],"names":["React","Component","Query","Mutation","AnimatedFormStyles","Router","gql","Error","Success","SIGNIN_MUTATION","SIGNUP_MUTATION","RESET_PASSWORD_MUTATION","Form","option","email","password","repeatPassword","successMessage","setEmail","setPassword","setRepeatPassword","setSuccessMessage","sign","error","loading","called","e","preventDefault","variables","res","push","pathname","data","requestReset","message","target","value","Auth","useState","setOption"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { AnimatedFormStyles } from \"../components/styles/FormStyles\";\nimport Router from \"next/router\";\nimport gql from \"graphql-tag\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n    }\n  }\n`;\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $password: String!\n    $repeatPassword: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      repeatPassword: $repeatPassword\n    ) {\n      id\n      email\n    }\n  }\n`;\n\nconst RESET_PASSWORD_MUTATION = gql`\n  mutation RESET_PASSWORD_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst Form = ({\n  option,\n  email,\n  password,\n  repeatPassword,\n  successMessage,\n  setEmail,\n  setPassword,\n  setRepeatPassword,\n  setSuccessMessage\n}) => {\n  return (\n    <Mutation\n      mutation={\n        option === 1\n          ? SIGNIN_MUTATION\n          : option === 2\n          ? SIGNUP_MUTATION\n          : RESET_PASSWORD_MUTATION\n      }\n    >\n      {(sign, { error, loading, called }) => (\n        <form\n          className=\"account-form\"\n          method=\"POST\"\n          onSubmit={async e => {\n            e.preventDefault();\n            const res = await sign({\n              variables: { email, password, repeatPassword }\n            });\n\n            if (option === 1) {\n              Router.push({\n                pathname: \"/app\"\n              });\n            } else if (option === 2) {\n              Router.push({\n                pathname: \"/app\"\n              });\n            } else {\n              setSuccessMessage(res.data.requestReset.message);\n            }\n          }}\n        >\n          <div\n            className={\n              \"account-form-fields \" +\n              (option === 1 ? \"sign-in\" : option === 2 ? \"sign-up\" : \"forgot\")\n            }\n          >\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={e => setEmail(e.target.value)}\n              placeholder=\"Email Address\"\n              required\n            />\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={e => setPassword(e.target.value)}\n              required={option === 1 || option === 2 ? true : false}\n              disabled={option === 3 ? true : false}\n            />\n            <input\n              id=\"repeat-password\"\n              name=\"repeat-password\"\n              type=\"password\"\n              placeholder=\"Repeat password\"\n              onChange={e => setRepeatPassword(e.target.value)}\n              required={option === 2 ? true : false}\n              disabled={option === 1 || option === 3 ? true : false}\n            />\n          </div>\n          <button\n            disabled={loading}\n            aria-busy={loading}\n            className=\"btn-submit-form\"\n            type=\"submit\"\n          >\n            {option === 1\n              ? \"Sign in\"\n              : option === 2\n              ? \"Sign up\"\n              : \"Reset password\"}\n          </button>\n          <Error error={error} />\n          {option === 3 && !error && !loading && called && (\n            <Success message={successMessage}></Success>\n          )}\n        </form>\n      )}\n    </Mutation>\n  );\n};\n\nconst Auth = () => {\n  const [option, setOption] = React.useState(1);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [repeatPassword, setRepeatPassword] = React.useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(\"\");\n\n  return (\n    <AnimatedFormStyles>\n      <ul className=\"options\">\n        <li\n          className={option === 1 ? \"active\" : \"\"}\n          onClick={() => setOption(1)}\n        >\n          Sign in\n        </li>\n        <li\n          className={option === 2 ? \"active\" : \"\"}\n          onClick={() => setOption(2)}\n        >\n          Sign up\n        </li>\n        <li\n          className={option === 3 ? \"active\" : \"\"}\n          onClick={() => setOption(3)}\n        >\n          Forgot\n        </li>\n        <li>\n          <img src=\"/logo.svg\" alt=\"\" width=\"70\" />\n        </li>\n      </ul>\n      <Form\n        option={option}\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        repeatPassword={repeatPassword}\n        setRepeatPassword={setRepeatPassword}\n        successMessage={successMessage}\n        setSuccessMessage={setSuccessMessage}\n      ></Form>\n    </AnimatedFormStyles>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}