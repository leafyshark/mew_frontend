{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_PASSWORD_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION(\\n    $email: String!\\n    $password: String!\\n    $repeatPassword: String!\\n  ) {\\n    signup(\\n      email: $email\\n      password: $password\\n      repeatPassword: $repeatPassword\\n    ) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { AnimatedFormStyles } from \"../components/styles/FormStyles\";\nimport Router from \"next/router\";\nimport gql from \"graphql-tag\";\nimport Error from \"../components/Error\";\nimport Success from \"../components/Success\";\nvar SIGNIN_MUTATION = gql(_templateObject());\nvar SIGNUP_MUTATION = gql(_templateObject2());\nvar RESET_PASSWORD_MUTATION = gql(_templateObject3());\n\nvar Form = function Form(_ref) {\n  var option = _ref.option,\n      email = _ref.email,\n      password = _ref.password,\n      repeatPassword = _ref.repeatPassword,\n      successMessage = _ref.successMessage,\n      setEmail = _ref.setEmail,\n      setPassword = _ref.setPassword,\n      setRepeatPassword = _ref.setRepeatPassword,\n      setSuccessMessage = _ref.setSuccessMessage;\n  return __jsx(Mutation, {\n    mutation: option === 1 ? SIGNIN_MUTATION : option === 2 ? SIGNUP_MUTATION : RESET_PASSWORD_MUTATION\n  }, function (sign, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading,\n        called = _ref2.called;\n    return __jsx(\"form\", {\n      className: \"account-form\",\n      method: \"POST\",\n      onSubmit: function _callee(e) {\n        var res;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(sign({\n                  variables: {\n                    email: email,\n                    password: password,\n                    repeatPassword: repeatPassword\n                  }\n                }));\n\n              case 3:\n                res = _context.sent;\n\n                if (option === 1) {\n                  Router.push({\n                    pathname: \"/app\"\n                  });\n                } else if (option === 2) {\n                  Router.push({\n                    pathname: \"/app\"\n                  });\n                } else {\n                  setSuccessMessage(res.data.requestReset.message);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      }\n    }, __jsx(\"div\", {\n      className: \"account-form-fields \" + (option === 1 ? \"sign-in\" : option === 2 ? \"sign-up\" : \"forgot\")\n    }, __jsx(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      placeholder: \"Email Address\",\n      required: true\n    }), __jsx(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      required: option === 1 || option === 2 ? true : false,\n      disabled: option === 3 ? true : false\n    }), __jsx(\"input\", {\n      id: \"repeat-password\",\n      name: \"repeat-password\",\n      type: \"password\",\n      placeholder: \"Repeat password\",\n      onChange: function onChange(e) {\n        return setRepeatPassword(e.target.value);\n      },\n      required: option === 2 ? true : false,\n      disabled: option === 1 || option === 3 ? true : false\n    })), __jsx(\"button\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      className: \"btn-submit-form\",\n      type: \"submit\"\n    }, option === 1 ? \"Sign in\" : option === 2 ? \"Sign up\" : \"Reset password\"), __jsx(Error, {\n      error: error\n    }), option === 3 && !error && !loading && called && __jsx(Success, {\n      message: successMessage\n    }));\n  });\n};\n\nvar Auth = function Auth() {\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      option = _React$useState2[0],\n      setOption = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      repeatPassword = _React$useState8[0],\n      setRepeatPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      successMessage = _React$useState10[0],\n      setSuccessMessage = _React$useState10[1];\n\n  return __jsx(AnimatedFormStyles, null, __jsx(\"ul\", {\n    className: \"options\"\n  }, __jsx(\"li\", {\n    className: option === 1 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(1);\n    }\n  }, \"Sign in\"), __jsx(\"li\", {\n    className: option === 2 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(2);\n    }\n  }, \"Sign up\"), __jsx(\"li\", {\n    className: option === 3 ? \"active\" : \"\",\n    onClick: function onClick() {\n      return setOption(3);\n    }\n  }, \"Forgot\"), __jsx(\"li\", null, __jsx(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"\",\n    width: \"70\"\n  }))), __jsx(Form, {\n    option: option,\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    repeatPassword: repeatPassword,\n    setRepeatPassword: setRepeatPassword,\n    successMessage: successMessage,\n    setSuccessMessage: setSuccessMessage\n  }));\n};\n\nexport default Auth;","map":null,"metadata":{},"sourceType":"module"}